<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="domains">
    
  <!-- Domains -->

    <!-- insert id="insertDomain" parameterClass="string">
      insert into domain ("domain_name") values (#value#)
    </insert -->
    
    <insert id="insertDomainIfNotExists" parameterClass="Domain">
 
        insert into domain ("domain_name","ip_address_id")
        select #domainName#, #ipAddressId#
        where not exists (select id from domain where domain_name=#domainName#)
        <selectKey keyProperty="id" resultClass="int">select id from domain where domain_name=#domainName#</selectKey>
    </insert>
    

    <select id="getDomains" parameterClass="int" resultClass="Domain"><![CDATA[
      select
        dom.id, dom.domain_name as domainName, dom.ip_address_id as ipAddressId,
        (select ip_address from ip_address ipa where ipa.id=dom.ip_address_id) as ip_address
      from domain dom
      where
        dom.id>=((#value# - 1) * 10)
        and dom.id<#value# * 10
        and (dom.ip_address_id is null or dom.ip_address_id=0) 
    ]]></select>
    
    <update id="updateDomainIpAddressId" parameterClass="Domain">
        update domain
        set ip_address_id=#ipAddressId#
        where id=#id#
    </update>
    
    <insert id="insertDNSServerRequestCount" parameterClass="DNSServerRequestCount">
        <selectKey resultClass="int" keyProperty="id" >SELECT nextval('dns_server_request_count_id_seq')</selectKey>
        insert into dns_server_request_count
                (id, dns_server_id, start, end, request_count, error_count)
        values  (#id#, #dnsServerId#, #start#, #end#, #requestCount#, #errorCount#)
    </insert>
    
  <!-- IP Address -->
  
    <select id="getIPAddress" parameterClass="int" resultClass="IPAddress">
      select id, ip_address as ipAddress from ip_address where id=#value#
    </select>
    
    <select id="getIPAddressId" parameterClass="string" resultClass="int">
      select id from ip_address where ip_address=#value#
    </select>
  
    <insert id="insertIPAddress" parameterClass="IPAddress">
      <selectKey resultClass="int" keyProperty="id" >SELECT nextval('ip_address_id_seq')</selectKey> 
      insert into ip_address (id, "ip_address") values (#id#, #ipAddress#)
    </insert>
    
    <insert id="insertIPAddressIfNotExists" parameterClass="IPAddress">
        insert into ip_address ("ip_address") select #ipAddress#
        where not exists (select id from ip_address where ip_address=#ipAddress#)
        <selectKey keyProperty="id" resultClass="int">select id from ip_address where ip_address=#ipAddress#</selectKey>
    </insert>
  
  <!-- DNS -->

    <insert id="insertDNSLookUpJOb" parameterClass="DNSLookUpJob">
      <selectKey resultClass="int" keyProperty="id" >SELECT nextval('dns_lookup_job_id_seq')</selectKey> 
      insert into dns_lookup_job (id, "started", "status") values (#id#, #started#,#status#)
    </insert>

    <insert id="insertDNSServerIfNotExists" parameterClass="DNSServer">
      insert into dns_server ("domain_name", "ip_address")
      select #domainName#,#ipAddress#
      where not exists 
        (select id from dns_server 
         where domain_name=#domainName# and domain_name is not null or ip_address=#ipAddress# and ip_address is not null)
      <selectKey resultClass="int" keyProperty="id" >
          SELECT id
          from dns_server
          where domain_name=#domainName# and domain_name is not null or ip_address=#ipAddress# and ip_address is not null
      </selectKey> 
    </insert>
    
    <select id="getNextDNSServer" parameterClass="int" resultClass="DNSServer">
       select id, domain_name as domainName, ip_address as ipAddress from dns_server where id>#value# order by id limit 1;
    </select>
    
    <!-- LINKS -->
    
    <insert id="insertDomainDNSServerLink" parameterClass="DomainDNSServerLink">
        insert into domain_dns_server_link ("domain_id","dns_server_id")
        select #domainId#,#dnsServerId#
        where not exists
          (select id
           from domain_dns_server_link
           where domain_id=#domainId# and dns_server_id=#dnsServerId#)
    </insert>
</sqlMap>
